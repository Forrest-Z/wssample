// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: G29Socket.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_G29Socket_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_G29Socket_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3010000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3010000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_G29Socket_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_G29Socket_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_G29Socket_2eproto;
namespace G29Socket {
class G29SocketPack;
class G29SocketPackDefaultTypeInternal;
extern G29SocketPackDefaultTypeInternal _G29SocketPack_default_instance_;
}  // namespace G29Socket
PROTOBUF_NAMESPACE_OPEN
template<> ::G29Socket::G29SocketPack* Arena::CreateMaybeMessage<::G29Socket::G29SocketPack>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace G29Socket {

// ===================================================================

class G29SocketPack :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:G29Socket.G29SocketPack) */ {
 public:
  G29SocketPack();
  virtual ~G29SocketPack();

  G29SocketPack(const G29SocketPack& from);
  G29SocketPack(G29SocketPack&& from) noexcept
    : G29SocketPack() {
    *this = ::std::move(from);
  }

  inline G29SocketPack& operator=(const G29SocketPack& from) {
    CopyFrom(from);
    return *this;
  }
  inline G29SocketPack& operator=(G29SocketPack&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const G29SocketPack& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const G29SocketPack* internal_default_instance() {
    return reinterpret_cast<const G29SocketPack*>(
               &_G29SocketPack_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(G29SocketPack& a, G29SocketPack& b) {
    a.Swap(&b);
  }
  inline void Swap(G29SocketPack* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline G29SocketPack* New() const final {
    return CreateMaybeMessage<G29SocketPack>(nullptr);
  }

  G29SocketPack* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<G29SocketPack>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const G29SocketPack& from);
  void MergeFrom(const G29SocketPack& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(G29SocketPack* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "G29Socket.G29SocketPack";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_G29Socket_2eproto);
    return ::descriptor_table_G29Socket_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAxesFieldNumber = 5,
    kButtonsFieldNumber = 6,
    kFrameIdFieldNumber = 4,
    kSeqFieldNumber = 1,
    kSecsFieldNumber = 2,
    kNsecsFieldNumber = 3,
  };
  // repeated float axes = 5;
  int axes_size() const;
  private:
  int _internal_axes_size() const;
  public:
  void clear_axes();
  private:
  float _internal_axes(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_axes() const;
  void _internal_add_axes(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_axes();
  public:
  float axes(int index) const;
  void set_axes(int index, float value);
  void add_axes(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      axes() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_axes();

  // repeated float buttons = 6;
  int buttons_size() const;
  private:
  int _internal_buttons_size() const;
  public:
  void clear_buttons();
  private:
  float _internal_buttons(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_buttons() const;
  void _internal_add_buttons(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_buttons();
  public:
  float buttons(int index) const;
  void set_buttons(int index, float value);
  void add_buttons(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      buttons() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_buttons();

  // string frame_id = 4;
  void clear_frame_id();
  const std::string& frame_id() const;
  void set_frame_id(const std::string& value);
  void set_frame_id(std::string&& value);
  void set_frame_id(const char* value);
  void set_frame_id(const char* value, size_t size);
  std::string* mutable_frame_id();
  std::string* release_frame_id();
  void set_allocated_frame_id(std::string* frame_id);
  private:
  const std::string& _internal_frame_id() const;
  void _internal_set_frame_id(const std::string& value);
  std::string* _internal_mutable_frame_id();
  public:

  // uint32 seq = 1;
  void clear_seq();
  ::PROTOBUF_NAMESPACE_ID::uint32 seq() const;
  void set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_seq() const;
  void _internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 secs = 2;
  void clear_secs();
  ::PROTOBUF_NAMESPACE_ID::uint32 secs() const;
  void set_secs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_secs() const;
  void _internal_set_secs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 nsecs = 3;
  void clear_nsecs();
  ::PROTOBUF_NAMESPACE_ID::uint32 nsecs() const;
  void set_nsecs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_nsecs() const;
  void _internal_set_nsecs(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:G29Socket.G29SocketPack)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > axes_;
  mutable std::atomic<int> _axes_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > buttons_;
  mutable std::atomic<int> _buttons_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr frame_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 seq_;
  ::PROTOBUF_NAMESPACE_ID::uint32 secs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 nsecs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_G29Socket_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// G29SocketPack

// uint32 seq = 1;
inline void G29SocketPack::clear_seq() {
  seq_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 G29SocketPack::_internal_seq() const {
  return seq_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 G29SocketPack::seq() const {
  // @@protoc_insertion_point(field_get:G29Socket.G29SocketPack.seq)
  return _internal_seq();
}
inline void G29SocketPack::_internal_set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  seq_ = value;
}
inline void G29SocketPack::set_seq(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:G29Socket.G29SocketPack.seq)
}

// uint32 secs = 2;
inline void G29SocketPack::clear_secs() {
  secs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 G29SocketPack::_internal_secs() const {
  return secs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 G29SocketPack::secs() const {
  // @@protoc_insertion_point(field_get:G29Socket.G29SocketPack.secs)
  return _internal_secs();
}
inline void G29SocketPack::_internal_set_secs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  secs_ = value;
}
inline void G29SocketPack::set_secs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_secs(value);
  // @@protoc_insertion_point(field_set:G29Socket.G29SocketPack.secs)
}

// uint32 nsecs = 3;
inline void G29SocketPack::clear_nsecs() {
  nsecs_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 G29SocketPack::_internal_nsecs() const {
  return nsecs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 G29SocketPack::nsecs() const {
  // @@protoc_insertion_point(field_get:G29Socket.G29SocketPack.nsecs)
  return _internal_nsecs();
}
inline void G29SocketPack::_internal_set_nsecs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  nsecs_ = value;
}
inline void G29SocketPack::set_nsecs(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_nsecs(value);
  // @@protoc_insertion_point(field_set:G29Socket.G29SocketPack.nsecs)
}

// string frame_id = 4;
inline void G29SocketPack::clear_frame_id() {
  frame_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& G29SocketPack::frame_id() const {
  // @@protoc_insertion_point(field_get:G29Socket.G29SocketPack.frame_id)
  return _internal_frame_id();
}
inline void G29SocketPack::set_frame_id(const std::string& value) {
  _internal_set_frame_id(value);
  // @@protoc_insertion_point(field_set:G29Socket.G29SocketPack.frame_id)
}
inline std::string* G29SocketPack::mutable_frame_id() {
  // @@protoc_insertion_point(field_mutable:G29Socket.G29SocketPack.frame_id)
  return _internal_mutable_frame_id();
}
inline const std::string& G29SocketPack::_internal_frame_id() const {
  return frame_id_.GetNoArena();
}
inline void G29SocketPack::_internal_set_frame_id(const std::string& value) {
  
  frame_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void G29SocketPack::set_frame_id(std::string&& value) {
  
  frame_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:G29Socket.G29SocketPack.frame_id)
}
inline void G29SocketPack::set_frame_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  frame_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:G29Socket.G29SocketPack.frame_id)
}
inline void G29SocketPack::set_frame_id(const char* value, size_t size) {
  
  frame_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:G29Socket.G29SocketPack.frame_id)
}
inline std::string* G29SocketPack::_internal_mutable_frame_id() {
  
  return frame_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* G29SocketPack::release_frame_id() {
  // @@protoc_insertion_point(field_release:G29Socket.G29SocketPack.frame_id)
  
  return frame_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void G29SocketPack::set_allocated_frame_id(std::string* frame_id) {
  if (frame_id != nullptr) {
    
  } else {
    
  }
  frame_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), frame_id);
  // @@protoc_insertion_point(field_set_allocated:G29Socket.G29SocketPack.frame_id)
}

// repeated float axes = 5;
inline int G29SocketPack::_internal_axes_size() const {
  return axes_.size();
}
inline int G29SocketPack::axes_size() const {
  return _internal_axes_size();
}
inline void G29SocketPack::clear_axes() {
  axes_.Clear();
}
inline float G29SocketPack::_internal_axes(int index) const {
  return axes_.Get(index);
}
inline float G29SocketPack::axes(int index) const {
  // @@protoc_insertion_point(field_get:G29Socket.G29SocketPack.axes)
  return _internal_axes(index);
}
inline void G29SocketPack::set_axes(int index, float value) {
  axes_.Set(index, value);
  // @@protoc_insertion_point(field_set:G29Socket.G29SocketPack.axes)
}
inline void G29SocketPack::_internal_add_axes(float value) {
  axes_.Add(value);
}
inline void G29SocketPack::add_axes(float value) {
  _internal_add_axes(value);
  // @@protoc_insertion_point(field_add:G29Socket.G29SocketPack.axes)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
G29SocketPack::_internal_axes() const {
  return axes_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
G29SocketPack::axes() const {
  // @@protoc_insertion_point(field_list:G29Socket.G29SocketPack.axes)
  return _internal_axes();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
G29SocketPack::_internal_mutable_axes() {
  return &axes_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
G29SocketPack::mutable_axes() {
  // @@protoc_insertion_point(field_mutable_list:G29Socket.G29SocketPack.axes)
  return _internal_mutable_axes();
}

// repeated float buttons = 6;
inline int G29SocketPack::_internal_buttons_size() const {
  return buttons_.size();
}
inline int G29SocketPack::buttons_size() const {
  return _internal_buttons_size();
}
inline void G29SocketPack::clear_buttons() {
  buttons_.Clear();
}
inline float G29SocketPack::_internal_buttons(int index) const {
  return buttons_.Get(index);
}
inline float G29SocketPack::buttons(int index) const {
  // @@protoc_insertion_point(field_get:G29Socket.G29SocketPack.buttons)
  return _internal_buttons(index);
}
inline void G29SocketPack::set_buttons(int index, float value) {
  buttons_.Set(index, value);
  // @@protoc_insertion_point(field_set:G29Socket.G29SocketPack.buttons)
}
inline void G29SocketPack::_internal_add_buttons(float value) {
  buttons_.Add(value);
}
inline void G29SocketPack::add_buttons(float value) {
  _internal_add_buttons(value);
  // @@protoc_insertion_point(field_add:G29Socket.G29SocketPack.buttons)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
G29SocketPack::_internal_buttons() const {
  return buttons_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
G29SocketPack::buttons() const {
  // @@protoc_insertion_point(field_list:G29Socket.G29SocketPack.buttons)
  return _internal_buttons();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
G29SocketPack::_internal_mutable_buttons() {
  return &buttons_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
G29SocketPack::mutable_buttons() {
  // @@protoc_insertion_point(field_mutable_list:G29Socket.G29SocketPack.buttons)
  return _internal_mutable_buttons();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace G29Socket

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_G29Socket_2eproto
